=============================================================================
List of generated methods in project: Dilute_Test

THIS TEXT DESCRIPTION IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
=============================================================================

Module "RS485W_EN" (bean BitIO)
   - RS485W_EN_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - RS485W_EN_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - RS485W_EN_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.
   - RS485W_EN_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if 
                the direction = _[output]_ or _[input/output]_.

Module "Uart"      (bean AsynchroSerial)
   - Uart_Enable -Enables the component - it starts the send and receive functions. Events may be generated 
                ("DisableEvent"/"EnableEvent").
   - Uart_RecvChar -If any data is received, this method returns one character, otherwise it returns an error code (it does not 
                wait for data). This method is enabled only if the receiver property is enabled.  [Note:] Because the preferred 
                method to handle error and break exception in the interrupt mode is to use events <OnError> and <OnBreak> the 
                return value ERR_RXEMPTY has higher priority than other error codes. As a consequence the information about an 
                exception in interrupt mode is returned only if there is a valid character ready to be read. [ Version specific 
                information for Freescale 56800 derivatives ]   DMA mode:  If DMA controller is available on the selected CPU 
                and the receiver is configured to use DMA controller then this method only sets the selected DMA channel. Then 
                the status of the DMA transfer can be checked using GetCharsInRxBuf method. See an example of a typical usage 
                for details about the communication using DMA.
   - Uart_SendChar -Sends one character to the channel. If the component is temporarily disabled (Disable method) SendChar 
                method only stores data into an output buffer. In case of a zero output buffer size, only one character can be 
                stored. Enabling the component (Enable method) starts the transmission of the stored data. This method is 
                available only if the transmitter property is enabled.  [ Version specific information for Freescale 56800 
                derivatives ]   DMA mode:  If DMA controller is available on the selected CPU and the transmitter is configured 
                to use DMA controller then this method only sets selected DMA channel. Then the status of the DMA transfer can 
                be checked using GetCharsInTxBuf method. See an example of a typical usage for details about communication 
                using DMA.
   - Uart_RecvBlock -If any data is received, this method returns the block of the data and its length (and incidental error), 
                otherwise it returns an error code (it does not wait for data).  This method is available only if non-zero 
                length of the input buffer is defined and the receiver property is enabled.  If less than requested number of 
                characters is received only the available data is copied from the receive buffer to the user specified 
                destination. The value ERR_EXEMPTY is returned and the value of variable pointed by the Rcv parameter is set to 
                the number of received characters. [ Version specific information for Freescale 56800 derivatives ]   DMA mode: 
                If DMA controller is available on the selected CPU and the receiver is configured to use DMA controller then 
                this method only sets the selected DMA channel. Then the status of the DMA transfer can be checked using 
                GetCharsInRxBuf method. See an example of a typical usage for details about communication using DMA.
   - Uart_SendBlock -Sends a block of characters to the channel.  This method is available only if non-zero length of the 
                output buffer is defined and the transmitter property is enabled.  [ Version specific information for Freescale 
                56800 derivatives ]   DMA mode:  If DMA controller is available on the selected CPU and the transmitter is 
                configured to use DMA controller then this method only sets the selected DMA channel. Then the status of the 
                DMA transfer can be checked using GetCharsInTxBuf method. See typical usage for details about communication 
                using DMA.
   - Uart_ClearRxBuf -Clears the receive buffer.  This method is available only if non-zero length of the input buffer is 
                defined and the receiver property is enabled. [ Version specific information for Freescale 56800 derivatives ]  
                DMA mode:  If DMA controller is available on the selected CPU and the receiver is configured to use DMA 
                controller then this method only stops selected DMA channel.
   - Uart_ClearTxBuf -Clears the transmit buffer.  This method is available only if non-zero length of the output buffer is 
                defined and the receiver property is enabled. [ Version specific information for Freescale 56800 derivatives ]  
                DMA mode:  If DMA controller is available on the selected CPU and the transmitter is configured to use DMA 
                controller then this method only stops selected DMA channel.
   - Uart_GetCharsInRxBuf -Returns the number of characters in the input buffer. This method is available only if the receiver 
                property is enabled. [ Version specific information for Freescale 56800 derivatives ]   DMA mode:  If DMA 
                controller is available on the selected CPU and the receiver is configured to use DMA controller then this 
                method returns the number of characters in the receive buffer.
   - Uart_GetCharsInTxBuf -Returns the number of characters in the output buffer. This method is available only if the 
                transmitter property is enabled. [ Version specific information for Freescale 56800 derivatives ]   DMA mode:  
                If DMA controller is available on the selected CPU and the transmitter is configured to use DMA controller then 
                this method returns the number of characters in the transmit buffer.

Module "LED"       (bean BitIO)
   - LED_SetDir -Sets a pin direction (available only if the direction = _[input/output]_).
   - LED_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - LED_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a memory or a 
                register and this value will be written to the pin after switching to the output mode (using [SetDir(TRUE)]; 
                see <Safe mode> property for limitations). If the direction is [output], it writes the value to the pin. 
                (Method is available only if the direction = _[output]_ or _[input/output]_).
   - LED_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.
   - LED_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the 
                direction = _[output]_ or _[input/output]_.

Module "TI1"       (bean TimerInt)
   - TI1_Enable -This method enables the component - it starts the timer. Events may be generated (<DisableEvent>/<EnableEvent>)
                .
   - TI1_Disable -This method disables the component - it stops the timer. No events will be generated.
   - TI1_EnableEvent -This method enables the events.
   - TI1_DisableEvent -This method disables the events.

Module "SPI7708CS" (bean BitIO)
   - SPI7708CS_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - SPI7708CS_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - SPI7708CS_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.
   - SPI7708CS_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if 
                the direction = _[output]_ or _[input/output]_.

Module "SPI7708CLK" (bean BitIO)
   - SPI7708CLK_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - SPI7708CLK_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - SPI7708CLK_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - SPI7708CLK_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.

Module "SPI7708SDI" (bean BitIO)
   - SPI7708SDI_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - SPI7708SDI_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - SPI7708SDI_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is 
                available only if the direction = _[output]_ or _[input/output]_.
   - SPI7708SDI_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.

Module "SPI7708SDO" (bean BitIO)
   - SPI7708SDO_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].

Module "MYEEPROM"  (bean IntEEPROM)
   - MYEEPROM_SetByte -This method writes a given byte to a specified address in EEPROM. The method also sets address pointer 
                for <SetActByte> and <GetActByte> methods (applicable only if these methods are enabled). The pointer is set to 
                address passed as the parameter.
   - MYEEPROM_GetByte -This method reads a byte from a specified EEPROM address. The method also sets address pointer for 
                <SetActByte> and <GetActByte> methods (applicable only if these methods are enabled). The pointer is set to 
                address passed as the parameter.

Module "SPI7708EN" (bean BitIO)
   - SPI7708EN_SetDir -Sets a pin direction (available only if the direction = _[input/output]_).
   - SPI7708EN_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - SPI7708EN_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a 
                memory or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - SPI7708EN_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.
   - SPI7708EN_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if 
                the direction = _[output]_ or _[input/output]_.

Module "Cpu"       (bean MC9S08DZ60_32)
   - Cpu_EnableInt -Enables maskable interrupts
   - Cpu_DisableInt -Disables maskable interrupts

===================================================================================
